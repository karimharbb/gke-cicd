steps:
  # Build and Push Docker Image 1
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'us-central1-docker.pkg.dev/t-project-449309/gke-cicd/quickstart-image:${_SHORT_SHA}', './app1']
    id: 'Build Docker Image 1'

  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'us-central1-docker.pkg.dev/gke-cicdt-project-449309/quickstart-image:${_SHORT_SHA}']
    id: 'Push Docker Image 1'

  # Build and Push Docker Image 2
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'us-central1-docker.pkg.dev/t-project-449309/gke-cicd/flask-image:${_SHORT_SHA}', './app2']
    id: 'Build Docker Image 2'

  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'us-central1-docker.pkg.dev/t-project-449309/gke-cicd/flask-image:${_SHORT_SHA}']
    id: 'Push Docker Image 2'

  # Deploy the application
  - name: 'google/cloud-sdk:latest'
    entrypoint: 'sh'
    args:
    - -xe
    - -c
    - |
        gcloud deploy apply --file deploy/pipeline.yaml --region=us-central1
        gcloud deploy apply --file deploy/dev.yaml --region=us-central1
        gcloud deploy releases create 'app-release-${${_SHORT_SHA}}' --delivery-pipeline=gke-cicd-pipeline --region=us-central1 --skaffold-file=skaffold.yaml

options:
  logging: CLOUD_LOGGING_ONLY

images:
  - "us-central1-docker.pkg.dev/${_PROJECT_ID}/${_REPO_NAME}/${_IMAGE_NAME}:${_SHORT_SHA}"

substitutions:
  _DEPLOYMENT_NAME: "my-deployment"
  _IMAGE_NAME: "poc-test"
  _PROJECT_ID: "poc-test-447813"
  _SHORT_SHA: "${SHORT_SHA}"
  _RELEASE_NAME: "v-${SHORT_SHA}" # Specify your release version
  _PIPELINE: "poc-pipeline" # The pipeline name created in Cloud Deploy
  _REPO_NAME: "poc-test" # The repository name for your Docker image
   



#k