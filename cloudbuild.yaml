steps:
  # Build Docker Image 1
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'us-central1-docker.pkg.dev/${_t-project-449309}/${ gke-cicd}/quickstart-image:${_SHORT_SHA}', './app1']
    id: 'Build Docker Image 1'

  # Push Docker Image 1
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'us-central1-docker.pkg.dev/${_t-project-449309}/${ gke-cicd}/quickstart-image:${_SHORT_SHA}']
    id: 'Push Docker Image 1'

  # Build Docker Image 2
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'us-central1-docker.pkg.dev/${_t-project-449309}/${ gke-cicd}/flask-image:${_SHORT_SHA}', './app2']
    id: 'Build Docker Image 2'

  # Push Docker Image 2
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'us-central1-docker.pkg.dev/${_t-project-449309}/${ gke-cicd}/flask-image:${_SHORT_SHA}']
    id: 'Push Docker Image 2'

  # Authenticate to GKE
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'sh'
    args:
      - -c
      - |
        gcloud container clusters get-credentials ${_CLUSTER_NAME} --region us-central1 --project ${_t-project-449309}
    id: 'Authenticate to GKE'

  # Deploy the application using Skaffold
  - name: 'google/cloud-sdk:latest'
    entrypoint: 'sh'
    args:
      - -xe
      - -c
      - |
        gcloud deploy apply --file deploy/pipeline.yaml --region=us-central1
        gcloud deploy apply --file deploy/dev.yaml --region=us-central1
        gcloud deploy releases create 'app-release-${_SHORT_SHA}' --delivery-pipeline=${_PIPELINE} --region=us-central1 --skaffold-file=skaffold.yaml
    id: 'Deploy Application'

options:
  logging: CLOUD_LOGGING_ONLY

images:
  - "us-central1-docker.pkg.dev/${_t-project-449309}/${ gke-cicd}/quickstart-image:${_SHORT_SHA}"
  - "us-central1-docker.pkg.dev/${_t-project-449309}/${ gke-cicd}/flask-image:${_SHORT_SHA}"

substitutions:
  _DEPLOYMENT_NAME: "my-deployment"
  _IMAGE_NAME: "poc-test"
  _t-project-449309: "poc-test-447813"
  _SHORT_SHA: "${SHORT_SHA}"
  _RELEASE_NAME: "v-${SHORT_SHA}"  # Specify your release version
  # _PIPELINE: "poc-pipeline"  # The pipeline name created in Cloud Deploy
  gke-cicd: "poc-test"  # The repository name for your Docker image
  _CLUSTER_NAME: "your-gke-cluster-name"  # Add your GKE cluster name here